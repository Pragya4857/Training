//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TrainReservationSys
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TrainReservationDBEntities1 : DbContext
    {
        public TrainReservationDBEntities1()
            : base("name=TrainReservationDBEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Admin_Details> Admin_Details { get; set; }
        public virtual DbSet<BookedTicket> BookedTickets { get; set; }
        public virtual DbSet<fare> fares { get; set; }
        public virtual DbSet<train_classes> train_classes { get; set; }
        public virtual DbSet<Train> Trains { get; set; }
        public virtual DbSet<User_details> User_details { get; set; }
    
        public virtual int AddTrain(Nullable<int> trainNumber, string trainName, string source, string destination, Nullable<bool> isActive)
        {
            var trainNumberParameter = trainNumber.HasValue ?
                new ObjectParameter("TrainNumber", trainNumber) :
                new ObjectParameter("TrainNumber", typeof(int));
    
            var trainNameParameter = trainName != null ?
                new ObjectParameter("TrainName", trainName) :
                new ObjectParameter("TrainName", typeof(string));
    
            var sourceParameter = source != null ?
                new ObjectParameter("Source", source) :
                new ObjectParameter("Source", typeof(string));
    
            var destinationParameter = destination != null ?
                new ObjectParameter("Destination", destination) :
                new ObjectParameter("Destination", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddTrain", trainNumberParameter, trainNameParameter, sourceParameter, destinationParameter, isActiveParameter);
        }
    
        public virtual int CancelTicket(Nullable<int> bookingId)
        {
            var bookingIdParameter = bookingId.HasValue ?
                new ObjectParameter("BookingId", bookingId) :
                new ObjectParameter("BookingId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CancelTicket", bookingIdParameter);
        }
    
        public virtual ObjectResult<GetBookingHistory_Result> GetBookingHistory(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBookingHistory_Result>("GetBookingHistory", userNameParameter);
        }
    
        public virtual int MgTbl_tclasses(Nullable<int> trainNo, string @class, Nullable<int> nos)
        {
            var trainNoParameter = trainNo.HasValue ?
                new ObjectParameter("TrainNo", trainNo) :
                new ObjectParameter("TrainNo", typeof(int));
    
            var classParameter = @class != null ?
                new ObjectParameter("Class", @class) :
                new ObjectParameter("Class", typeof(string));
    
            var nosParameter = nos.HasValue ?
                new ObjectParameter("nos", nos) :
                new ObjectParameter("nos", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MgTbl_tclasses", trainNoParameter, classParameter, nosParameter);
        }
    
        public virtual int MgTbl_tclassesCan(Nullable<int> trainNo, string @class, Nullable<int> nos)
        {
            var trainNoParameter = trainNo.HasValue ?
                new ObjectParameter("TrainNo", trainNo) :
                new ObjectParameter("TrainNo", typeof(int));
    
            var classParameter = @class != null ?
                new ObjectParameter("Class", @class) :
                new ObjectParameter("Class", typeof(string));
    
            var nosParameter = nos.HasValue ?
                new ObjectParameter("nos", nos) :
                new ObjectParameter("nos", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MgTbl_tclassesCan", trainNoParameter, classParameter, nosParameter);
        }
    }
}
